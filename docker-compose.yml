version: "3"

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP
      - "15672:15672" # Web UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    command:
      - "postgres"
      - "-c"
      - "wal_level=logical"

  ruby-server:
    build:
      context: ./ruby-server
    container_name: ruby-server
    command: rerun -- ruby app.rb
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    volumes:
      - ./ruby-server:/app
    post_start:
      - command: rake "db:migrate"
        user: root
    ports:
      - "3001:3001"
      - "50051:50051"

  node-server:
    build:
      context: ./node-server
    container_name: node-server
    command: bun --watch index.ts
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_URL: amqp://guest:guest@rabbitmq:5672
    ports:
      - "4000:4000"
    volumes:
      - ./node-server:/app

  debezium:
    image: quay.io/debezium/server:latest
    container_name: debezium
    ports:
      - 8080:8080
    volumes:
      - ./ruby-server/debezium/conf:/debezium/config
    environment:
      - database.ssl.mode=disable
      - DEBEZIUM_TRUSTED_CERTIFICATES=trustServerCertificate=true
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_started
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus

volumes:
  postgres_data:
  grafana_data:
